version: '3'
services:  
  # web:
  #   container_name: "web"
  #   restart: always
  #   build: 
  #     context: .
  #     dockerfile: web.Dockerfile
  #   volumes:
  #     - ./web/src:/web/src
  #     - ./web/tsconfig.json:/web/tsconfig.json
  #     - ./web/webpack.config.js:/web/webpack.config.js
  #   ports:
  #     - 3001:3001
  #   networks:
  #     - servernet
  nginx:
    container_name: "nginx"
    image: nginx
    restart: always
    depends_on:
      - server
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - webvolume:/usr/share/nginx/html
    networks: 
      - servernet
  server: 
    container_name: "server"
    restart: always
    build:
      context: ./
      dockerfile: ./web+server.Dockerfile
    environment:
      - PORT=8080
      - DB_CONNECTION=postgres://user:secure1@db/test_db
      - NODE_ENV=production
    depends_on: 
      - db
    ports: 
      - 8080:8080
    volumes: 
      # - ./server/src:/build/server/src
      # - ./server/app.js:/build/server/app.js
      # - ./server/package.json:/build/server/package.json
      # - ./web/dist:/web
      - ./server.pm2.config.json:/build/server/pm2.config.json
      - webvolume:/web
    networks:
      - servernet
  db:
    container_name: "postgres"
    image: postgres:9.3
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=secure1
      - POSTGRES_DB=test_db
    ports:
      - "5432:5432"
    networks:
      - servernet
networks:
  servernet:
volumes:
  webvolume: